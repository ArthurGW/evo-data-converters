[project]
name = "evo-data-converters"
description = "Convert data between geoscience formats and Evo geoscience objects to improve interoperability in geoscience applications"
requires-python = ">=3.10"
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE.md", content-type = "text/markdown" }
version = "0.1.0"
dependencies = [
  "evo-data-converters-common",
  "evo-data-converters-gocad",
  "evo-data-converters-omf",
  "evo-data-converters-resqml",
  "evo-data-converters-ubc",
  "evo-data-converters-vtk",
]

[dependency-groups]
dev = [
  "mypy",
  "ruff",
]

[tool.uv.sources]
evo-data-converters-common = { workspace = true }
evo-data-converters-gocad = { workspace = true }
evo-data-converters-omf = { workspace = true }
evo-data-converters-resqml = { workspace = true }
evo-data-converters-ubc = { workspace = true }
evo-data-converters-vtk = { workspace = true }
omf2 = { git = "https://github.com/gmggroup/omf-rust", subdirectory = "omf-python" }

[tool.uv.workspace]
members = ["packages/*"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".git",
  ".git-rewrite",
  ".mypy_cache",
  ".pytype",
  ".ruff_cache",
  ".venv",
  "__pypackages__",
  "_build",
  "build",
  "dist",
  "venv",
]
line-length = 120

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I", "UP006"]

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[build-system]
requires = ["hatchling", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = ["/src", "/assets"]

[tool.hatch.build.targets.wheel]
include = ["/src"]

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.substitutions]]
# Literal TOML strings (single quotes) need no escaping of backslashes.
# Converts relative links to absolute links in PyPI
pattern = '\[(.+?)\]\(((?!https?://)\S+?)\)'
replacement = '[\1](https://github.com/SeequentEvo/evo-data-converters/tree/main/packages/$HFPR_PACKAGE_NAME/\g<2>)'
